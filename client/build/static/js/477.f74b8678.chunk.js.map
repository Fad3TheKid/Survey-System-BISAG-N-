{"version":3,"file":"static/js/477.f74b8678.chunk.js","mappings":"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","sources":["pages/EmployeeDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api, { masterDataService, employeeService } from '../services/api';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EmployeeDetails = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [uploadedData, setUploadedData] = useState(null);\r\n  const [deleteEmployeeId, setDeleteEmployeeId] = useState('');\r\n  const [showDeleteInput, setShowDeleteInput] = useState(false);\r\n  const [downloadMode, setDownloadMode] = useState(null);\r\n  const [individualEmployeeId, setIndividualEmployeeId] = useState('');\r\n\r\n  // Helper to safely render values, converting objects/arrays to strings\r\n  const safeRender = (value) => {\r\n    if (value === null || value === undefined) return '-';\r\n    if (Array.isArray(value)) return value.join(', ');\r\n    if (typeof value === 'object') return '[Object]';\r\n    return value;\r\n  };\r\n\r\n  // Get department name by id, safely handle objects and arrays\r\n  const getDepartmentName = (deptId) => {\r\n    if (deptId === null || deptId === undefined) return '-';\r\n    if (Array.isArray(deptId)) return deptId.join(', ');\r\n    if (typeof deptId === 'object') return '[Object]';\r\n    const dept = departments.find(d => d.dept_id === deptId || d._id === deptId);\r\n    return dept ? dept.name : deptId;\r\n  };\r\n\r\n  // Fetch departments and employees on mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const deptData = await masterDataService.getDepartments();\r\n        setDepartments(deptData);\r\n      } catch (err) {\r\n        console.error('Failed to fetch departments:', err);\r\n      }\r\n      try {\r\n        const empData = await employeeService.getEmployees();\r\n        setEmployees(empData);\r\n      } catch (err) {\r\n        setError('Failed to fetch employee details.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle file upload for bulk employee upload\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const firstSheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[firstSheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' });\r\n      setUploadedData(jsonData);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  // Upload valid employees after checking duplicates and email validity\r\n  const handleUploadClick = async () => {\r\n    if (!uploadedData || uploadedData.length === 0) {\r\n      alert('No data to upload');\r\n      return;\r\n    }\r\n    const existingEmployeeIds = new Set(employees.map(emp => emp.employeeId));\r\n    const duplicateIds = uploadedData.filter(item => existingEmployeeIds.has(item['Employee ID']));\r\n    if (duplicateIds.length > 0) {\r\n      alert(`Duplicate Employee IDs found: ${duplicateIds.map(d => d['Employee ID']).join(', ')}`);\r\n      return;\r\n    }\r\n    const uploadedEmails = uploadedData\r\n      .map(item => item['Employee Email'])\r\n      .filter(email => email)\r\n      .map(email => email.trim().toLowerCase());\r\n    try {\r\n      const response = await api.post('/employee/check-emails', { emails: uploadedEmails });\r\n      const existingEmails = (response.data.existingEmails || []).map(email => email.toLowerCase());\r\n      const validEmployees = uploadedData.filter(item => existingEmails.includes(item['Employee Email'].trim().toLowerCase()));\r\n      const invalidEmployees = uploadedData.filter(item => !existingEmails.includes(item['Employee Email'].trim().toLowerCase()));\r\n      if (invalidEmployees.length > 0) {\r\n        const invalidEmployeeIds = invalidEmployees.map(item => item['Employee ID']);\r\n        alert(`The following Employee IDs have emails not found in user database: ${invalidEmployeeIds.join(', ')}`);\r\n      }\r\n      if (validEmployees.length === 0) {\r\n        alert('No valid employees to upload.');\r\n        return;\r\n      }\r\n      const transformedData = validEmployees.map(item => ({\r\n        employeeId: item['Employee ID'] || '',\r\n        employeeName: item['Employee Name'] || '',\r\n        email: item['Employee Email'] || '',\r\n        department: item['Department'] || '',\r\n        level: item['Level'] || '',\r\n        designation: item['Designation'] || '',\r\n        reportingAuthorityName: item['Reporting Authority Name'] || '',\r\n        reportingAuthorityDepartment: item['Reporting Authority Department'] || '',\r\n        reportingAuthorityLevel: item['Reporting Authority Level'] || '',\r\n        reportingAuthorityDesignation: item['Reporting Authority Designation'] || '',\r\n        dateOfJoining: item['Date of Joining'] ? new Date(item['Date of Joining']).toISOString() : '',\r\n      }));\r\n      const savedEmployees = await employeeService.createEmployees(transformedData);\r\n      if (savedEmployees && savedEmployees.savedEmployees && savedEmployees.savedEmployees.length > 0) {\r\n        setEmployees(prev => [...prev, ...savedEmployees.savedEmployees]);\r\n      }\r\n      setUploadedData(null);\r\n    } catch (err) {\r\n      alert(`Failed to validate or upload employees: ${err}`);\r\n    }\r\n  };\r\n\r\n  // Download all employees as Excel\r\n  const downloadAll = () => {\r\n    const dataForExcel = employees.map(emp => ({\r\n      'Employee ID': safeRender(emp.employeeId),\r\n      'Employee Name': safeRender(emp.employeeName),\r\n      'Employee Email': safeRender(emp.email),\r\n      'Department': safeRender(getDepartmentName(emp.department)),\r\n      'Level': safeRender(emp.level),\r\n      'Designation': safeRender(emp.designation),\r\n      'Reporting Authority Name': safeRender(emp.reportingAuthorityName),\r\n      'Reporting Authority Department': safeRender(getDepartmentName(emp.reportingAuthorityDepartment)),\r\n      'Reporting Authority Level': safeRender(emp.reportingAuthorityLevel),\r\n      'Reporting Authority Designation': safeRender(emp.reportingAuthorityDesignation),\r\n      'Date of Joining': emp.dateOfJoining ? new Date(emp.dateOfJoining).toLocaleDateString() : '-',\r\n    }));\r\n    const worksheet = XLSX.utils.json_to_sheet(dataForExcel);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Employees');\r\n    XLSX.writeFile(workbook, 'EmployeeDetails_All.xlsx');\r\n  };\r\n\r\n  // Download individual employee as Excel\r\n  const downloadIndividual = () => {\r\n    const emp = employees.find(e => e.employeeId === individualEmployeeId);\r\n    if (!emp) {\r\n      alert('Employee ID not found');\r\n      return;\r\n    }\r\n    const dataForExcel = [{\r\n      'Employee ID': safeRender(emp.employeeId),\r\n      'Employee Name': safeRender(emp.employeeName),\r\n      'Employee Email': safeRender(emp.email),\r\n      'Department': safeRender(getDepartmentName(emp.department)),\r\n      'Level': safeRender(emp.level),\r\n      'Designation': safeRender(emp.designation),\r\n      'Reporting Authority Name': safeRender(emp.reportingAuthorityName),\r\n      'Reporting Authority Department': safeRender(getDepartmentName(emp.reportingAuthorityDepartment)),\r\n      'Reporting Authority Level': safeRender(emp.reportingAuthorityLevel),\r\n      'Reporting Authority Designation': safeRender(emp.reportingAuthorityDesignation),\r\n      'Date of Joining': emp.dateOfJoining ? new Date(emp.dateOfJoining).toLocaleDateString() : '-',\r\n    }];\r\n    const worksheet = XLSX.utils.json_to_sheet(dataForExcel);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Employee');\r\n    XLSX.writeFile(workbook, `EmployeeDetails_${individualEmployeeId}.xlsx`);\r\n    setIndividualEmployeeId('');\r\n  };\r\n\r\n  // Delete employee by ID\r\n  const handleDelete = async () => {\r\n    if (!deleteEmployeeId) {\r\n      alert('Please enter an Employee ID to delete');\r\n      return;\r\n    }\r\n    try {\r\n      await employeeService.deleteEmployee(deleteEmployeeId);\r\n      setEmployees(prev => prev.filter(emp => emp.employeeId !== deleteEmployeeId));\r\n      setDeleteEmployeeId('');\r\n      setShowDeleteInput(false);\r\n    } catch (err) {\r\n      alert(`Failed to delete employee: ${err}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>Loading employee details...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div style={{ padding: 20, fontFamily: 'Arial, sans-serif', color: 'red' }}>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: '95vw', margin: '20px auto', backgroundColor: '#ffffff', borderRadius: 8, boxShadow: '0 4px 12px rgba(0,0,0,0.1)', fontFamily: 'Arial, sans-serif', padding: 20, overflowX: 'auto' }}>\r\n      <h2 style={{ textAlign: 'center', marginBottom: 10, color: '#03045e', borderBottom: '3px solid #03045e', paddingBottom: 10 }}>Employee Details</h2>\r\n\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', marginBottom: 25, gap: 15 }}>\r\n        <button\r\n          onClick={downloadAll}\r\n          style={{\r\n            backgroundColor: 'transparent',\r\n            color: '#03045e',\r\n            border: '1px solid #03045e',\r\n            borderRadius: 6,\r\n            padding: '12px 24px',\r\n            cursor: 'pointer',\r\n            fontWeight: '600',\r\n            flexGrow: 1,\r\n            minWidth: 140,\r\n            transition: 'background-color 0.3s, color 0.3s',\r\n          }}\r\n          onMouseEnter={e => {\r\n            e.currentTarget.style.backgroundColor = '#03045e';\r\n            e.currentTarget.style.color = 'white';\r\n          }}\r\n          onMouseLeave={e => {\r\n            e.currentTarget.style.backgroundColor = 'transparent';\r\n            e.currentTarget.style.color = '#03045e';\r\n          }}\r\n        >\r\n          Download All\r\n        </button>\r\n        <button\r\n          onClick={() => setDownloadMode('individual')}\r\n          style={{\r\n            backgroundColor: 'transparent',\r\n            color: '#0077b6',\r\n            border: '1px solid #0077b6',\r\n            borderRadius: 6,\r\n            padding: '12px 24px',\r\n            cursor: 'pointer',\r\n            fontWeight: '600',\r\n            flexGrow: 1,\r\n            minWidth: 160,\r\n            transition: 'background-color 0.3s, color 0.3s',\r\n          }}\r\n          onMouseEnter={e => {\r\n            e.currentTarget.style.backgroundColor = '#0077b6';\r\n            e.currentTarget.style.color = 'white';\r\n          }}\r\n          onMouseLeave={e => {\r\n            e.currentTarget.style.backgroundColor = 'transparent';\r\n            e.currentTarget.style.color = '#0077b6';\r\n          }}\r\n        >\r\n          Download Individual\r\n        </button>\r\n        {downloadMode === 'individual' && (\r\n          <div style={{ display: 'flex', alignItems: 'center', marginLeft: 20, flexGrow: 3, minWidth: 220 }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Employee ID\"\r\n              value={individualEmployeeId}\r\n              onChange={(e) => setIndividualEmployeeId(e.target.value)}\r\n              style={{\r\n                padding: '8px 12px',\r\n                borderRadius: '6px 0 0 6px',\r\n                border: '1px solid #90e0ef',\r\n                borderRight: 'none',\r\n                flexGrow: 1,\r\n                color: '#03045e',\r\n                fontSize: 16,\r\n              }}\r\n            />\r\n            <button\r\n              onClick={downloadIndividual}\r\n              style={{\r\n                backgroundColor: '#0077b6',\r\n                color: '#caf0f8',\r\n                border: '1px solid #0077b6',\r\n                borderRadius: '0 6px 6px 0',\r\n                padding: '8px 12px',\r\n                cursor: 'pointer',\r\n                fontWeight: '600',\r\n                fontSize: 18,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                userSelect: 'none',\r\n              }}\r\n              title=\"Download Employee Details\"\r\n            >\r\n              &#x25BC;\r\n            </button>\r\n          </div>\r\n        )}\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xlsx, .xls\"\r\n          onChange={handleFileUpload}\r\n          style={{\r\n            marginLeft: 20,\r\n            padding: '8px 12px',\r\n            borderRadius: 6,\r\n            border: '1px solid #90e0ef',\r\n            cursor: 'pointer',\r\n            flexGrow: 3,\r\n            minWidth: 220,\r\n            backgroundColor: '#caf0f8',\r\n            color: '#03045e',\r\n          }}\r\n        />\r\n        {uploadedData && (\r\n          <button\r\n            onClick={handleUploadClick}\r\n            style={{\r\n              backgroundColor: '#00b4d8',\r\n              color: '#03045e',\r\n              border: 'none',\r\n              borderRadius: 6,\r\n              padding: '12px 24px',\r\n              cursor: 'pointer',\r\n              fontWeight: '600',\r\n              marginLeft: 15,\r\n              flexGrow: 1,\r\n              minWidth: 120,\r\n              transition: 'background-color 0.3s',\r\n            }}\r\n            onMouseEnter={e => e.currentTarget.style.backgroundColor = '#90e0ef'}\r\n            onMouseLeave={e => e.currentTarget.style.backgroundColor = '#00b4d8'}\r\n          >\r\n            Upload\r\n          </button>\r\n        )}\r\n        {!showDeleteInput && (\r\n          <button\r\n            onClick={() => setShowDeleteInput(true)}\r\n            style={{\r\n              backgroundColor: '#c82333',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: 6,\r\n              padding: '10px 20px',\r\n              cursor: 'pointer',\r\n              fontWeight: '600',\r\n              transition: 'background-color 0.3s',\r\n            }}\r\n            onMouseEnter={e => e.currentTarget.style.backgroundColor = '#a71d2a'}\r\n            onMouseLeave={e => e.currentTarget.style.backgroundColor = '#c82333'}\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n        {showDeleteInput && (\r\n          <div style={{ marginBottom: 25, display: 'flex', alignItems: 'center', gap: 15 }}>\r\n            <label style={{ fontWeight: '600', fontSize: 16, color: '#03045e' }}>\r\n              Enter Employee ID to Delete:\r\n              <input\r\n                type=\"text\"\r\n                value={deleteEmployeeId}\r\n                onChange={(e) => setDeleteEmployeeId(e.target.value)}\r\n                style={{\r\n                  padding: 8,\r\n                  fontSize: 16,\r\n                  marginLeft: 15,\r\n                  borderRadius: 6,\r\n                  border: '1px solid #90e0ef',\r\n                  width: 240,\r\n                  color: '#03045e',\r\n                }}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={handleDelete}\r\n              style={{\r\n                backgroundColor: '#c82333',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: 6,\r\n                padding: '10px 20px',\r\n                cursor: 'pointer',\r\n                fontWeight: '600',\r\n                transition: 'background-color 0.3s',\r\n              }}\r\n              onMouseEnter={e => e.currentTarget.style.backgroundColor = '#a71d2a'}\r\n              onMouseLeave={e => e.currentTarget.style.backgroundColor = '#c82333'}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ overflowX: 'auto' }}>\r\n        <table style={{ width: '100%', borderCollapse: 'separate', borderSpacing: '0 1px', marginBottom: 15 }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: '#0b3d91' }}>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Employee ID</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Employee Name</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Employee Email</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Department</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Level</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Designation</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Reporting Authority Name</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Reporting Authority Department</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Reporting Authority Level</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Reporting Authority Designation</th>\r\n              <th style={{ padding: '10px', border: '1px solid #0b3d91', backgroundColor: '#0b3d91', color: 'white' }}>Date of Joining</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {employees.map((emp) => (\r\n              <tr key={emp._id} style={{ borderBottom: '1px solid #bbdefb', backgroundColor: '#e8eaf6' }}>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.employeeId)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.employeeName)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.email)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(getDepartmentName(emp.department))}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.level)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.designation)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.reportingAuthorityName)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(getDepartmentName(emp.reportingAuthorityDepartment))}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.reportingAuthorityLevel)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.reportingAuthorityDesignation)}</td>\r\n                <td style={{ padding: '8px', border: '1px solid #bbdefb' }}>{safeRender(emp.dateOfJoining ? new Date(emp.dateOfJoining).toLocaleDateString() : '-')}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetails;\r\n"],"names":["EmployeeDetails","employees","setEmployees","useState","departments","setDepartments","loading","setLoading","error","setError","uploadedData","setUploadedData","deleteEmployeeId","setDeleteEmployeeId","showDeleteInput","setShowDeleteInput","downloadMode","setDownloadMode","individualEmployeeId","setIndividualEmployeeId","safeRender","value","undefined","Array","isArray","join","getDepartmentName","deptId","dept","find","d","dept_id","_id","name","useEffect","async","deptData","masterDataService","getDepartments","err","console","empData","employeeService","getEmployees","fetchData","_jsx","style","padding","fontFamily","children","color","_jsxs","maxWidth","margin","backgroundColor","borderRadius","boxShadow","overflowX","textAlign","marginBottom","borderBottom","paddingBottom","display","flexWrap","alignItems","gap","onClick","downloadAll","dataForExcel","map","emp","employeeId","employeeName","email","department","level","designation","reportingAuthorityName","reportingAuthorityDepartment","reportingAuthorityLevel","reportingAuthorityDesignation","dateOfJoining","Date","toLocaleDateString","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","border","cursor","fontWeight","flexGrow","minWidth","transition","onMouseEnter","e","currentTarget","onMouseLeave","marginLeft","type","placeholder","onChange","target","borderRight","fontSize","downloadIndividual","alert","justifyContent","userSelect","title","accept","event","file","files","reader","FileReader","onload","data","Uint8Array","result","firstSheetName","SheetNames","Sheets","jsonData","sheet_to_json","defval","readAsArrayBuffer","length","existingEmployeeIds","Set","duplicateIds","filter","item","has","uploadedEmails","trim","toLowerCase","existingEmails","api","post","emails","validEmployees","includes","invalidEmployees","invalidEmployeeIds","transformedData","toISOString","savedEmployees","createEmployees","prev","width","deleteEmployee","borderCollapse","borderSpacing"],"sourceRoot":""}